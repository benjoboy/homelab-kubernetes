---

- hosts: all
  become: true
  tasks:

  - name: Update apt cache
    apt:
      update_cache: yes

  - name: Upgrade all packages
    apt:
      upgrade: yes
      autoclean: yes

  # - name: Reboot the system
  #   reboot:

  - name: Turn off swap
    command: swapoff -a
    become: true

  - name: Remove swap entry from /etc/fstab
    replace:
      path: /etc/fstab
      regexp: '^(\s*)([^#\n]+\s+)(\w+\s+)swap(\s+.*)$'
      replace: '#\1\2\3swap\4'
      backup: yes
    become: true

  - name: Ensure containerd.conf file is present
    file:
      path: /etc/modules-load.d/containerd.conf
      state: touch

  - name: Add overlay and br_netfilter to containerd.conf
    lineinfile:
      path: /etc/modules-load.d/containerd.conf
      line: "{{ item }}"
    loop:
      - overlay
      - br_netfilter

  - name: Load overlay module
    command: modprobe overlay

  - name: Load br_netfilter module
    command: modprobe br_netfilter

  - name: Create /etc/sysctl.d/kubernetes.conf with required settings
    copy:
      dest: /etc/sysctl.d/kubernetes.conf
      content: |
        net.bridge.bridge-nf-call-ip6tables = 1
        net.bridge.bridge-nf-call-iptables = 1
        net.ipv4.ip_forward = 1

  - name: Apply sysctl settings
    command: sysctl --system
  
  - name: Install curl, gnupg2, software-properties-common, apt-transport-https, and ca-certificates
    apt:
      name: 
        - curl
        - gnupg2
        - software-properties-common
        - apt-transport-https
        - ca-certificates
      update_cache: yes
  
  - name: Download and add Docker GPG key
    shell: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmour -o /etc/apt/trusted.gpg.d/docker.gpg

  - name: Add Docker repository
    apt_repository:
      repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"

  - name: Update apt cache
    apt:
      update_cache: yes
  
  - name: Update apt cache
    apt:
      update_cache: yes

  - name: Install containerd.io
    apt:
      name: containerd.io
      state: present

  - name: Generate default containerd config
    command: containerd config default
    register: containerd_config_default

  - name: Write default containerd config to file
    copy:
      dest: /etc/containerd/config.toml
      content: "{{ containerd_config_default.stdout }}"

  - name: Enable systemd cgroup in containerd config
    lineinfile:
      path: /etc/containerd/config.toml
      regexp: '^(\s*)SystemdCgroup\s*=\s*false\s*$'
      line: 'SystemdCgroup = true'
      backrefs: yes

  - name: Restart containerd
    systemd:
      name: containerd
      state: restarted

  - name: Enable containerd to start on boot
    systemd:
      name: containerd
      enabled: yes

  - name: Add Kubernetes APT repository
    apt_repository:
      repo: "deb http://apt.kubernetes.io/ kubernetes-xenial main"
      state: present

  - name: Download Kubernetes GPG key
    shell:
      cmd: "curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key | sudo gpg --dearmor -o /etc/apt/trusted.gpg.d/kubernetes-apt-keyring.gpg"

  - name: Update APT package list
    apt:
      update_cache: yes

  - name: Download the Kubernetes GPG key
    get_url:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      dest: /tmp/apt-key.gpg

  - name: Convert GPG key to dearmored format
    command:
      cmd: gpg --dearmour -o /etc/apt/trusted.gpg.d/kubernetes-xenial.gpg /tmp/apt-key.gpg
    args:
      removes: /tmp/apt-key.gpg

  - name: Update APT package list
    apt:
      update_cache: yes

  - name: Install kubelet, kubeadm, and kubectl
    apt:
      name:
        - kubelet
        - kubeadm
        - kubectl
      state: present
      install_recommends: no

  - name: Hold kubelet, kubeadm, and kubectl at their current version
    command:
      cmd: apt-mark hold kubelet kubeadm kubectl

  
  
